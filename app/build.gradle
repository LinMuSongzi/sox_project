apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdk 32
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    androidExtensions {
        experimental = true
    }
    defaultConfig {
        applicationId "com.example.cpp"
        minSdk 23
        targetSdk 29
        versionCode 1
        versionName "1.0"
//        ndk {
//            abiFilters 'arm64-v8a','armeabi-v7a'
//        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ''
                abiFilters 'arm64-v8a','armeabi-v7a','x86'
            }
        }
    }
    signingConfigs {
        release {
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('signconfig.properties').newDataInputStream();
            properties.load(inputStream)

            def gradleStoreFile = properties.getProperty('storeFile');
            def gradleStorePassword = properties.getProperty('storePassword');
            def gradleKeyAlias = properties.getProperty('keyAlias');
            def gradleKeyPassword = properties.getProperty('keyPassword');


            storeFile file(gradleStoreFile)
            storePassword gradleStorePassword
            keyAlias gradleKeyAlias
            keyPassword gradleKeyPassword
        }
    }
    buildTypes {
        release {
            matchingFallbacks = ['release', 'preview', 'debug']
            // 是否显示日志
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 是否混淆
            minifyEnabled false
            // 减少应用在运行时的内存消耗
            zipAlignEnabled true
            manifestPlaceholders = [request_url: "http://192.168.1.106:8080/"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug{

            manifestPlaceholders = [request_url: "http://192.168.1.106:8080/"]
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'

        }
    }

    dataBinding {
//        noinspection DataBindingWithoutKapt
        enabled = true
    }
    ndkVersion '25.1.8937393'
}

dependencies {
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer:2.18.1'


    api 'androidx.core:core-ktx:1.7.0'
    api "androidx.appcompat:appcompat:1.3.1"
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.lifecycle:lifecycle-service:2.4.0'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    api 'androidx.viewpager2:viewpager2:1.1.0-alpha01'
    api 'androidx.cardview:cardview:1.0.0'
    api 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.google.android.material:material:1.4.0'
    implementation project(path: ':comment')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}